(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{285:function(e,t,i){"use strict";i.r(t);var a=i(14),n=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"how-it-works"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#how-it-works"}},[e._v("#")]),e._v(" How It Works")]),e._v(" "),t("p",[e._v("This package support for generate Service & Repository pattern with artisan command :")]),e._v(" "),t("ul",[t("li",[e._v("On service you can write bussines logic")]),e._v(" "),t("li",[e._v("On Repository you can write a query logic for database")])]),e._v(" "),t("p",[e._v("If you use command php artisan make:service or repository, this command will generate 2 file:")]),e._v(" "),t("ul",[t("li",[e._v("interface")]),e._v(" "),t("li",[e._v("implement class")])]),e._v(" "),t("p",[e._v("interface auto bind to class implement with container laravel, for detail you can read "),t("a",{attrs:{href:"https://laravel.com/docs/9.x/container#binding-interfaces-to-implementations",target:"_blank",rel:"noopener noreferrer"}},[e._v("read docs bind interface with implement"),t("OutboundLink")],1),e._v(" you can call method on interface to access method in class implement.")]),e._v(" "),t("p",[e._v("if you need to change or modification bind interface to new implement class you can add this config to AppServiceProvider : "),t("RouterLink",{attrs:{to:"/config/#change-bind-interface-to-new-class-implement"}},[e._v("click here")])],1),e._v(" "),t("p",[e._v("class implement extend with service or Elequent for handel basic method CRUD like, create, update, delete, findOrFail\nyou can override basic method crud for re-write code logic")]),e._v(" "),t("blockquote",[t("p",[e._v("For Basic CRUD like Create, Update, Delete, Find, FindOrFail, all already exist and ready to use")])])])}),[],!1,null,null,null);t.default=n.exports}}]);